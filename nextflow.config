#!/usr/bin/env nextflow
nextflow.enable.dsl=2

params.runOptions = '-B /dataB/aux -B / dataG/ddd -B /external/diskC/ddd'

// Singularity container
singularity {
    // Enable Singularity
    enabled = true

    // Mount the current working directory into the container when a process is executed
    autoMounts = true

    // Specify where Nextflow stores cached data
    cacheDir = "$HOME/.singularity/cache"

    // Run processes in a clean environment with minimal environmental variables
    runOptions = "--cleanenv " + "${params.runOptions}"
}

// Apply these configurations globally to each process
process {
    // Enable caching of task executions
    cache = true

    // Create symbolic links to input files rather than copying them into working directory
    stageInMode = 'symlink'

    // Synchronize output files from the process' working directory to the specified  output directory
    stageOutMode = 'rsync'

    // Assign 1 CPU core to the process
    cpus = 1

    // Assign 24 GB of RAM to the process
    memory = 24.GB

    // Process can run for 100 hours before being terminated
    time = 100.h

    // 10 processes can be executed simultaneously
    maxForks = 10

    // Label XHMM container as 'xhmm'
    withLabel = :'xhmm' {
        container = 'docker://phelelani/nf-exomecnv:xhmm'
    }
}

// Define sets of configuration options tailored to specific execution environments or use cases
profiles {
    wits {
        // Specifies SLURM to be used when running the workflow
        executor.name = 'slurm'

        // Specifies Nextflow to submit jobs to batch queue when using SLURM as the execution environment
        queue = 'batch'
    }
}

// WORKFLOW VISUALISATION
// Use 'trace' to write detailed execution info about your workflow to a file
trace {
    // Enable 'trace'
    enabled = true

    // Trace info overwrites any existing trace file
    overwrite = true

    // Write trace info to a file
    file = "${launchDir}/exec_reports/${params.workflow}_trace.txt"
}

// Generate visual representation of workflow's execution timeline
timeline {
    // Enable 'timeline'
    enabled = true

    // Timeline info overwrites any existing timeline file
    overwrite = true

    // Write 'timeline' info to a file
    file = "${launchDir}/exec_reports/${params.workflow}_timeline.html"
}

// Generate a comprehensive HTML report summarizing workflow execution
report {
    // Enable 'report'
    enabled = true

    // Report info overwrites any existing report file
    overwrite = true

    // Write 'report' to a file
    file = "${launchDir}/exec_reports/${params.workflow}_report.html"
}